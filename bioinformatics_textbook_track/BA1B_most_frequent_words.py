def max_freq(text, frame_length):
    '''Finds the most frequent k-mer in text'''
    frames = {}
#generates frames that move by 1 letter increments, excluding ends which are 
#shorter than frame_length
    for i in range(len(text) - frame_length):
        frame = text[i:i + frame_length]
#adds frames to dictionary without producing duplicates
        if frame in frames:
            frames[frame] += 1
        elif frame not in frames:
            frames[frame] = 1
#Returns frames with the max frequency, even if there are multiple answers
    max_freq = max(frames.values())
    max_frames = []
    for frame, freq in frames.items():
        if freq == max_freq:
            max_frames.append(frame)
    return sorted(max_frames)

text = 'GCCGTTGAGAGACTTCGCTCGAAGGTGCAGGCTTTGCGAAGGTGCAGCCGTTGAGAGCCGTTGAGAGAAGGTGCAGGCTTTGCGAAGGTGCAGAAGGTGCAGGCTTTGCGGCTTTGCGCCGTTGAGAGAAGGTGCAGAAGGTGCAGACTTCGCTCCGGATGAGCGGAAGGTGCAGACTTCGCTCCGGATGAGCGGACTTCGCTCCGGATGAGCGCGGATGAGCGCGGATGAGCGCGGATGAGCGGGCTTTGCGACTTCGCTCGCCGTTGAGAGAAGGTGCAGGCTTTGCCGGATGAGCGGACTTCGCTCGGCTTTGCGAAGGTGCAGGCTTTGCCGGATGAGCGGCCGTTGAGAGCCGTTGAGACGGATGAGCGCGGATGAGCGGACTTCGCTCGACTTCGCTCCGGATGAGCGGGCTTTGCGGCTTTGCGAAGGTGCAGAAGGTGCAGGCTTTGCGCCGTTGAGAGCCGTTGAGAGAAGGTGCAGACTTCGCTCGACTTCGCTCGCCGTTGAGAGAAGGTGCAGAAGGTGCAGACTTCGCTCGACTTCGCTCCGGATGAGCGGCCGTTGAGAGAAGGTGCAGAAGGTGCAGACTTCGCTCGACTTCGCTCGCCGTTGAGACGGATGAGCGGACTTCGCTCGCCGTTGAGACGGATGAGCGCGGATGAGCGGACTTCGCTCGCCGTTGAGAGACTTCGCTCGACTTCGCTCGGCTTTGCCGGATGAGCGGAAGGTGCAGACTTCGCTCGACTTCGCTCCGGATGAGCGGGCTTTGCCGGATGAGCGGAAGGTGCAGACTTCGCTCCGGATGAGCGGGCTTTGCGAAGGTGCAGGCTTTGCGAAGGTGCAGACTTCGCTCGGCTTTGCCGGATGAGCGGACTTCGCTCCGGATGAGCGGCCGTTGAGAGGCTTTGCGGCTTTGCGGCTTTGCCGGATGAGCGGCCGTTGAGA'
frame_length = 12

print(' '.join(max_freq(text,frame_length)))